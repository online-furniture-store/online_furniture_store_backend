# Generated by Django 4.2.2 on 2023-06-20 15:59

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [migrations.swappable_dependency(settings.AUTH_USER_MODEL)]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='Название категории')),
                ('slug', models.SlugField(unique=True, verbose_name='Ссылка на категорию')),
            ],
            options={'verbose_name': 'Категория', 'verbose_name_plural': 'Категории'},
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='Название цвета')),
            ],
            options={'verbose_name': 'Цвет', 'verbose_name_plural': 'Цвета'},
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'discount',
                    models.SmallIntegerField(
                        default=0,
                        validators=[django.core.validators.MaxValueValidator(99)],
                        verbose_name='Размер скидки, %',
                    ),
                ),
                (
                    'discount_created_at',
                    models.DateTimeField(default=django.utils.timezone.now, verbose_name='Начало скидки'),
                ),
                ('discount_end_at', models.DateTimeField(verbose_name='Окончание скидки')),
            ],
            options={'verbose_name': 'Скидка', 'verbose_name_plural': 'Скидки'},
        ),
        migrations.CreateModel(
            name='FurnitureDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purpose', models.CharField(blank=True, max_length=50, null=True, verbose_name='Назначение')),
                ('furniture_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Тип')),
                ('construction', models.CharField(blank=True, max_length=50, null=True, verbose_name='Конструкция')),
                (
                    'swing_mechanism',
                    models.CharField(blank=True, max_length=50, null=True, verbose_name='Механизм качания'),
                ),
                (
                    'armrest_adjustment',
                    models.CharField(blank=True, max_length=50, null=True, verbose_name='Регулирование подлокотников'),
                ),
            ],
            options={'verbose_name': 'Особенности конструкции', 'verbose_name_plural': 'Особенности конструкций'},
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='Название материала')),
            ],
            options={'verbose_name': 'Материал', 'verbose_name_plural': 'Материалы'},
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article', models.PositiveIntegerField(unique=True, verbose_name='Артикул')),
                ('name', models.CharField(max_length=20, verbose_name='Название')),
                (
                    'width',
                    models.PositiveSmallIntegerField(
                        validators=[django.core.validators.MaxValueValidator(15000)], verbose_name='Ширина, см'
                    ),
                ),
                (
                    'height',
                    models.PositiveSmallIntegerField(
                        validators=[django.core.validators.MaxValueValidator(15000)], verbose_name='Высота, см'
                    ),
                ),
                (
                    'length',
                    models.PositiveSmallIntegerField(
                        validators=[django.core.validators.MaxValueValidator(15000)], verbose_name='Длина, см'
                    ),
                ),
                (
                    'weight',
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=5,
                        validators=[django.core.validators.MaxValueValidator(500)],
                        verbose_name='Вес, кг',
                    ),
                ),
                (
                    'image',
                    models.ImageField(
                        default='products/noimage_detail.png',
                        upload_to='products/',
                        verbose_name='Фотография продукта',
                    ),
                ),
                ('fast_delivery', models.BooleanField(default=False, verbose_name='Быстрая доставка')),
                ('country', models.CharField(max_length=40, verbose_name='Страна-производитель')),
                ('brand', models.CharField(max_length=100, null=True, verbose_name='Бренд')),
                (
                    'warranty',
                    models.PositiveSmallIntegerField(
                        null=True,
                        validators=[django.core.validators.MaxValueValidator(100)],
                        verbose_name='Гарантия , лет',
                    ),
                ),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('description', models.CharField(verbose_name='Описание')),
                (
                    'category',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='products',
                        to='product.category',
                        verbose_name='Категория',
                    ),
                ),
                (
                    'color',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='products',
                        to='product.color',
                        verbose_name='Цвет',
                    ),
                ),
                (
                    'discount',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='products',
                        to='product.discount',
                        verbose_name='Скидки',
                    ),
                ),
                (
                    'furniture_details',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to='product.furnituredetails',
                        verbose_name='Особенности конструкции',
                    ),
                ),
                ('material', models.ManyToManyField(related_name='products', to='product.material')),
            ],
            options={'verbose_name': 'Товар', 'verbose_name_plural': 'Товары'},
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'product',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='favorites',
                        to='product.product',
                        verbose_name='Товар',
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='favorites',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Пользователь',
                    ),
                ),
            ],
            options={'verbose_name': 'Избранный товар', 'verbose_name_plural': 'Избранные товары'},
        ),
        migrations.AddField(
            model_name='discount',
            name='applied_products',
            field=models.ManyToManyField(
                related_name='discounts', to='product.product', verbose_name='Применяемые товары'
            ),
        ),
        migrations.CreateModel(
            name='CartModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'user',
                    models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
                ),
            ],
            options={'verbose_name': 'Корзина пользователя', 'verbose_name_plural': 'Корзины пользователей'},
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.cartmodel')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.product')),
            ],
            options={'verbose_name': 'Корзина с товарами', 'verbose_name_plural': 'Корзины с товарами'},
        ),
        migrations.AddConstraint(
            model_name='favorite',
            constraint=models.UniqueConstraint(fields=('product', 'user'), name='product_user_unique'),
        ),
    ]
