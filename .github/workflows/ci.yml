name: CI

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  pull_request:
    branches: ['master', 'dev']

  push:
    branches: ['master', 'dev']

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Run pre-commit
        uses: pre-commit/action@v3.0.0

  build_and_push_to_docker_hub:
    if: github.ref == 'refs/heads/dev'
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v4
        with:
          file: ./compose/dev_prod/django/Dockerfile
          push: true
          tags: ${{ secrets.BACKEND_IMAGE_TAG }}:${{ github.sha }}

  deploy:
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}

          script: |
            cd ~/infra
            docker compose down --remove-orphans
            docker compose rm -f django
            docker compose pull
            touch .env
            echo DJANGO_SETTINGS_MODULE=${{ secrets.DJANGO_SETTINGS_MODULE }} > .env
            echo DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }} > .env
            echo DJANGO_ADMIN_URL=${{ secrets.DJANGO_ADMIN_URL }} > .env
            echo DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }} > .env
            echo DJANGO_SECURE_SSL_REDIRECT=${{ secrets.DJANGO_SECURE_SSL_REDIRECT }} > .env
            echo DJANGO_MEDIA_ROOT=${{ secrets.DJANGO_MEDIA_ROOT }} >> .env

            echo POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} > .env
            echo POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} > .env
            echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} > .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} > .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} > .env

            docker compose -f dev_prod.yml up -d
            docker image prune -af
